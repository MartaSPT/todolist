{"ast":null,"code":"var _jsxFileName = \"/Users/martatrincao/Documents/my-project/react-study/todolist/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet nextId = 0;\n\n//guardar o input\n//tenho de ir alterando o estado da minha lista de tarefas (acho eu)\nfunction ButtonAdd() {\n  _s();\n  //const [buttonText, setButtonText] = React.useState('Incomplete');\n  const [task, setTask] = React.useState('');\n  const [list, setList] = React.useState([]);\n  const toggleTaskCompletion = id => {\n    setList(list.map(a => a.id === id ? {\n      ...a,\n      isComplete: !a.isComplete\n    } : a));\n  };\n  const handleDelete = id => {\n    setList(list.filter(a => a.id !== id));\n  };\n  const handleClick = () => {\n    setList([...list, {\n      id: nextId++,\n      description: task,\n      isComplete: false\n    }]);\n    setTask('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        placeholder: \"What needs to de done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        type: \"button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [task.description, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(task.id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleTaskCompletion(task.id),\n              children: task.isComplete ? 'Complete' : 'Incomplete'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(ButtonAdd, \"f6jhRUBto4kigb/a/t0gwZqlpLI=\");\n_c = ButtonAdd;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonAdd, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonAdd\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Tab","Tabs","TabList","TabPanel","React","jsxDEV","_jsxDEV","Fragment","_Fragment","nextId","ButtonAdd","_s","task","setTask","useState","list","setList","toggleTaskCompletion","id","map","a","isComplete","handleDelete","filter","handleClick","description","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","className","_c2","$RefreshReg$"],"sources":["/Users/martatrincao/Documents/my-project/react-study/todolist/src/App.js"],"sourcesContent":["import './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React from 'react';\n\nlet nextId = 0;\n\n\n\n//guardar o input\n//tenho de ir alterando o estado da minha lista de tarefas (acho eu)\nfunction ButtonAdd() {\n  //const [buttonText, setButtonText] = React.useState('Incomplete');\n  const [task, setTask] = React.useState('');\n  const [list, setList] = React.useState([]);\n\nconst toggleTaskCompletion  = (id) => {\n  setList(\n    list.map((a) =>\n      a.id === id ? {...a, isComplete: !a.isComplete} : a\n      \n    )\n  );\n};\n\nconst handleDelete = (id) =>{\n  setList(list.filter((a) => a.id !==id));\n}\n\nconst handleClick = () => {\n  setList([\n    ...list,\n    { id: nextId++,\n      description: task,\n      isComplete: false\n    }\n  ]);\n  setTask('');\n}\n\nreturn (\n  <>\n    <div>\n      <input\n        type=\"text\"\n        value={task}\n        onChange={e => setTask(e.target.value)}\n        placeholder=\"What needs to de done?\"\n      />\n\n      <button\n        onClick={handleClick}\n        type='button'>\n        Add\n      </button>\n    </div>\n    <Tabs>\n      <TabList>\n        <Tab>All</Tab>\n        <Tab></Tab>\n      </TabList>\n      <TabPanel>\n        <ul>\n          {list.map(task => (\n            <li key={task.id}>\n              {task.description}\n              <button onClick={() => handleDelete (task.id)}>\n                delete\n              </button>\n              <button onClick = {() => toggleTaskCompletion (task.id)}>\n                {task.isComplete ? 'Complete' : 'Incomplete'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </TabPanel>\n    </Tabs>\n\n  </>\n\n\n)\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>TODO LIST</h1>\n      <ButtonAdd />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
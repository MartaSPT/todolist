{"ast":null,"code":"var _jsxFileName = \"/Users/martatrincao/Documents/my-project/react-study/todolist/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet nextId = 0;\nfunction foo() {}\n\n//guardar o input\n//tenho de ir alterando o estado da minha lista de tarefas (acho eu)\nfunction ButtonAdd() {\n  _s();\n  const [task, setTask] = React.useState('');\n  const [list, setList] = React.useState([]);\n  const handleClick = () => {\n    setList([...list, {\n      id: nextId++,\n      task: task\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task,\n        onChange: e => setTask(e.target.value),\n        placeholder: \"What needs to de done?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        type: \"button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(TabList, {\n        children: /*#__PURE__*/_jsxDEV(Tab, {\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [b.task, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setList(list.filter(a => a.id !== b.id));\n              },\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, b.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ButtonAdd, \"f6jhRUBto4kigb/a/t0gwZqlpLI=\");\n_c = ButtonAdd;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonAdd, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ButtonAdd\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Tab","Tabs","TabList","TabPanel","React","jsxDEV","_jsxDEV","Fragment","_Fragment","nextId","foo","ButtonAdd","_s","task","setTask","useState","list","setList","handleClick","id","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","b","filter","a","_c","App","className","_c2","$RefreshReg$"],"sources":["/Users/martatrincao/Documents/my-project/react-study/todolist/src/App.js"],"sourcesContent":["import './App.css';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport React from 'react';\n\nlet nextId = 0;\n\nfunction foo (){\n  \n}\n\n//guardar o input\n//tenho de ir alterando o estado da minha lista de tarefas (acho eu)\nfunction ButtonAdd() {\n  const [task, setTask] = React.useState('');\n  const [list, setList] = React.useState([]);\n\n  const handleClick = () => {\n    setList([\n      ...list,\n      { id: nextId++, task: task }\n    ]);\n  }\n\n  return (\n    <>\n      <div>\n        <input\n          type=\"text\"\n          value={task}\n          onChange={e => setTask(e.target.value)}\n          placeholder=\"What needs to de done?\"\n        />\n\n        <button\n          onClick={handleClick}\n          type='button'>\n          Add\n        </button>\n      </div>\n      <Tabs>\n        <TabList>\n          <Tab>All</Tab>\n        </TabList>\n        <TabPanel>\n          <ul>\n            {list.map(b => (\n              <li key={b.id}>\n                {b.task}\n                <button onClick={() => {\n                  setList(\n                    list.filter(a => a.id !== b.id)\n                  )\n                }\n                }>\n                  delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </TabPanel>\n      </Tabs>\n\n    </>\n\n\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>TODO LIST</h1>\n      <ButtonAdd />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}